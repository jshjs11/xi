/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_apache_harmony_luni_platform_OSNetworkSystem */

#ifndef _Included_org_apache_harmony_luni_platform_OSNetworkSystem
#define _Included_org_apache_harmony_luni_platform_OSNetworkSystem
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    accept
 * Signature: (Ljava/io/FileDescriptor;Ljava/net/SocketImpl;Ljava/io/FileDescriptor;)V
 */
JNIEXPORT void JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_accept
  (JNIEnv *, jobject, jobject, jobject, jobject);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    bind
 * Signature: (Ljava/io/FileDescriptor;Ljava/net/InetAddress;I)V
 */
JNIEXPORT void JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_bind
  (JNIEnv *, jobject, jobject, jobject, jint);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    connect
 * Signature: (Ljava/io/FileDescriptor;Ljava/net/InetAddress;II)V
 */
JNIEXPORT void JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_connect
  (JNIEnv *, jobject, jobject, jobject, jint, jint);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    connectNonBlocking
 * Signature: (Ljava/io/FileDescriptor;Ljava/net/InetAddress;I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_connectNonBlocking
  (JNIEnv *, jobject, jobject, jobject, jint);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    isConnected
 * Signature: (Ljava/io/FileDescriptor;I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_isConnected
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    socket
 * Signature: (Ljava/io/FileDescriptor;Z)V
 */
JNIEXPORT void JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_socket
  (JNIEnv *, jobject, jobject, jboolean);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    disconnectDatagram
 * Signature: (Ljava/io/FileDescriptor;)V
 */
JNIEXPORT void JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_disconnectDatagram
  (JNIEnv *, jobject, jobject);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    getSocketLocalAddress
 * Signature: (Ljava/io/FileDescriptor;)Ljava/net/InetAddress;
 */
JNIEXPORT jobject JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_getSocketLocalAddress
  (JNIEnv *, jobject, jobject);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    getSocketLocalPort
 * Signature: (Ljava/io/FileDescriptor;)I
 */
JNIEXPORT jint JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_getSocketLocalPort
  (JNIEnv *, jobject, jobject);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    getSocketOption
 * Signature: (Ljava/io/FileDescriptor;I)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_getSocketOption
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    listen
 * Signature: (Ljava/io/FileDescriptor;I)V
 */
JNIEXPORT void JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_listen
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    read
 * Signature: (Ljava/io/FileDescriptor;[BII)I
 */
JNIEXPORT jint JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_read
  (JNIEnv *, jobject, jobject, jbyteArray, jint, jint);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    readDirect
 * Signature: (Ljava/io/FileDescriptor;II)I
 */
JNIEXPORT jint JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_readDirect
  (JNIEnv *, jobject, jobject, jint, jint);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    recv
 * Signature: (Ljava/io/FileDescriptor;Ljava/net/DatagramPacket;[BIIZZ)I
 */
JNIEXPORT jint JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_recv
  (JNIEnv *, jobject, jobject, jobject, jbyteArray, jint, jint, jboolean, jboolean);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    recvDirect
 * Signature: (Ljava/io/FileDescriptor;Ljava/net/DatagramPacket;IIIZZ)I
 */
JNIEXPORT jint JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_recvDirect
  (JNIEnv *, jobject, jobject, jobject, jint, jint, jint, jboolean, jboolean);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    selectImpl
 * Signature: ([Ljava/io/FileDescriptor;[Ljava/io/FileDescriptor;II[IJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_selectImpl
  (JNIEnv *, jclass, jobjectArray, jobjectArray, jint, jint, jintArray, jlong);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    send
 * Signature: (Ljava/io/FileDescriptor;[BIIILjava/net/InetAddress;)I
 */
JNIEXPORT jint JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_send
  (JNIEnv *, jobject, jobject, jbyteArray, jint, jint, jint, jobject);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    sendDirect
 * Signature: (Ljava/io/FileDescriptor;IIIILjava/net/InetAddress;)I
 */
JNIEXPORT jint JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_sendDirect
  (JNIEnv *, jobject, jobject, jint, jint, jint, jint, jobject);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    sendUrgentData
 * Signature: (Ljava/io/FileDescriptor;B)V
 */
JNIEXPORT void JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_sendUrgentData
  (JNIEnv *, jobject, jobject, jbyte);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    setInetAddress
 * Signature: (Ljava/net/InetAddress;[B)V
 */
JNIEXPORT void JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_setInetAddress
  (JNIEnv *, jobject, jobject, jbyteArray);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    setSocketOption
 * Signature: (Ljava/io/FileDescriptor;ILjava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_setSocketOption
  (JNIEnv *, jobject, jobject, jint, jobject);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    shutdownInput
 * Signature: (Ljava/io/FileDescriptor;)V
 */
JNIEXPORT void JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_shutdownInput
  (JNIEnv *, jobject, jobject);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    shutdownOutput
 * Signature: (Ljava/io/FileDescriptor;)V
 */
JNIEXPORT void JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_shutdownOutput
  (JNIEnv *, jobject, jobject);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    close
 * Signature: (Ljava/io/FileDescriptor;)V
 */
JNIEXPORT void JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_close
  (JNIEnv *, jobject, jobject);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    write
 * Signature: (Ljava/io/FileDescriptor;[BII)I
 */
JNIEXPORT jint JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_write
  (JNIEnv *, jobject, jobject, jbyteArray, jint, jint);

/*
 * Class:     org_apache_harmony_luni_platform_OSNetworkSystem
 * Method:    writeDirect
 * Signature: (Ljava/io/FileDescriptor;III)I
 */
JNIEXPORT jint JNICALL Java_org_apache_harmony_luni_platform_OSNetworkSystem_writeDirect
  (JNIEnv *, jobject, jobject, jint, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
