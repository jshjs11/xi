/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_ibm_icu4jni_charset_NativeConverter */

#ifndef _Included_com_ibm_icu4jni_charset_NativeConverter
#define _Included_com_ibm_icu4jni_charset_NativeConverter
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    decode
 * Signature: (J[BI[CI[IZ)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_decode
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jcharArray, jint, jintArray, jboolean);

/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    encode
 * Signature: (J[CI[BI[IZ)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_encode
  (JNIEnv *, jclass, jlong, jcharArray, jint, jbyteArray, jint, jintArray, jboolean);

/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    flushCharToByte
 * Signature: (J[BI[I)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_flushCharToByte
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jintArray);

/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    flushByteToChar
 * Signature: (J[CI[I)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_flushByteToChar
  (JNIEnv *, jclass, jlong, jcharArray, jint, jintArray);

/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    openConverter
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_openConverter
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    closeConverter
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_closeConverter
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    resetByteToChar
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_resetByteToChar
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    resetCharToByte
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_resetCharToByte
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    getSubstitutionBytes
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_getSubstitutionBytes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    getMaxBytesPerChar
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_getMaxBytesPerChar
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    getMinBytesPerChar
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_getMinBytesPerChar
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    getAveBytesPerChar
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_getAveBytesPerChar
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    getAveCharsPerByte
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_getAveCharsPerByte
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    contains
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_contains
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    canEncode
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_canEncode
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    getAvailableCharsetNames
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_getAvailableCharsetNames
  (JNIEnv *, jclass);

/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    charsetForName
 * Signature: (Ljava/lang/String;)Ljava/nio/charset/Charset;
 */
JNIEXPORT jobject JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_charsetForName
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    setCallbackDecode
 * Signature: (JII[C)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_setCallbackDecode
  (JNIEnv *, jclass, jlong, jint, jint, jcharArray);

/*
 * Class:     com_ibm_icu4jni_charset_NativeConverter
 * Method:    setCallbackEncode
 * Signature: (JII[B)I
 */
JNIEXPORT jint JNICALL Java_com_ibm_icu4jni_charset_NativeConverter_setCallbackEncode
  (JNIEnv *, jclass, jlong, jint, jint, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
